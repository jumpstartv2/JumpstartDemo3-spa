# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-07-31 15:55
from __future__ import unicode_literals

import core.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(editable=False, verbose_name='Updated At')),
                ('name', models.CharField(max_length=65, verbose_name='Name')),
                ('identifier', models.CharField(max_length=50, verbose_name='Identifier')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
            bases=(models.Model, core.models.ModelDiffMixin),
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(editable=False, verbose_name='Updated At')),
                ('name', models.CharField(max_length=65, verbose_name='Name')),
                ('identifier', models.IntegerField(choices=[(0, 'Access Token'), (1, 'Username'), (2, 'Password'), (3, 'API Url'), (4, 'Key'), (5, 'Secret')], default=0, verbose_name='Identifier')),
                ('value', models.TextField(verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'Settings',
            },
            bases=(models.Model, core.models.ModelDiffMixin),
        ),
        migrations.AddField(
            model_name='service',
            name='settings',
            field=models.ManyToManyField(blank=True, null=True, related_name='settings', to='services.Setting', verbose_name='Settings'),
        ),
    ]
